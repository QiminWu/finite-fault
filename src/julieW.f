C
C
C                  PROGRAM JULIEW.F
C
C     THIS ROUTINE READS THE OUTPUT FILES FROM READSM, NORMOD, TELMOD, AND
C     CADILLAC; INCORPORATES TIME DELAYS AND OPTIONAL SMOOTHING, AND SETS UP
C     THE ARRAYS  A  (SYNTHETICS) AND  B  (OBSERVATIONS) TO BE READ BY
C     LISA  (INVERSION PROGRAM).
C
C     THIS VERSION DOES AN ARBITRARY NUMBER OF TIME WINDOWS. DIMENSIONS
C     OF ARRAY A(N1,N2,N3): N1=NUMBER OF TIME POINTS IN ANY ONE RECORD
C     USED IN INVERSION, N2=(# OF SUBFAULTS)(# OF MECHANISMS)(# OF TIME
C     WINDOWS), N3=3.
C
      COMMON/ALL/A(800,2800,3)
      COMMON/REST/R(10000,3),TEMP(10000,3),TEL(10000)
      DIMENSION NSTID(100),TTRIG(100),NCPID(3),SYN(10000),SCING(100)
      DIMENSION WTS(100),BEGTIM(100),DTSAVE(100),SECTEL(100),SEC(100)
      DIMENSION NZ2SV(100)
      CHARACTER*50 IFB,IFRSM,IFTEL,IFA,IFG1,IFG2,IFG3,IFG4
      WRITE(6,600)
 600  FORMAT(1X,'.............. WARNING .............',/,
     +1X,'THIS PROGRAM ASSUMES THAT THE STATION ORDER IN',/,
     +1X,'THE NORMA RUN IS THE SAME AS THE ORDER OF STATIONS',/,
     +1X,'IN THE RUN OF READSM')
      WRITE(6,601)
 601  FORMAT(1X,'HOWEVER, THERE IS THE ABILITY TO SKIP SELECTED',/,
     +1X,'STATIONS IN THE READSM (OBSERVATIONS) FILE')
      WRITE(6,602)
 602  FORMAT(1X,'THIS PROGRAM ALSO ASSUMES THAT THE STATION ORDER',/,
     +1X,'FROM CADILLAC IS THE SAME AS THE TELESEISMIC',/,
     +1X,'OBSERVATIONS GIVEN IT, WITHOUT EXCEPTION')
C
C
C     READ IN CONTROL OPTIONS.
C
      WRITE(6,603)
 603  FORMAT(1X,'ENTER ICRL=1, INVERT NEAR-FIELD DATA ONLY',/,
     +1X,'      ICRL=2, INVERT  FAR-FIELD DATA ONLY',/,
     +1X,'      ICRL=3, INVERT NEAR-FIELD AND FAR-FIELD DATA')
      READ(5,*) ICRL
      WRITE(6,606)
 606  FORMAT(1X,'ENTER THE NUMBER OF TIME WINDOWS')
      READ(5,*) JW
      WRITE(6,605)
 605  FORMAT(1X,'ENTER THE TIME LAG BETWEEN TIME WINDOWS.',/,
     +1X,'IT MAY BE POSITIVE OR NEGATIVE.')
      READ(5,*) TLAG
      WRITE(6,607)
 607  FORMAT(1X,'DO YOU WANT THE RECORDS USED IN THE INVERSION',/,
     +1X,'TO HAVE UNIFORM AMPLITUDES (IE. WEIGHT), 1=YES 0=NO')
      READ(5,*) IWT
      IF(IWT .EQ. 0) GO TO 34
      WRITE(6,608)
 608  FORMAT(1X,'ENTER THE PEAK AMPLITUDE TO NORMALIZE TO')
      READ(5,*) PEAK
  34  WRITE(6,609)
 609  FORMAT(1X,'DO YOU WANT TO ENTER SEPARATE WEIGHTS TO BE',/,
     +1X,'APPLIED TO EACH INPUT RECORD, 1=YES 0=NO')
      READ(5,*) IDEP
      IF(IDEP .EQ. 0) GO TO 80
      WRITE(6,610)
 610  FORMAT(1X,'WHAT IS THE TOTAL NUMBER OF RECORDS TO BE USED',/,
     +1X,'IN THE INVERSION')
      READ(5,*) MAXREC
      WRITE(6,611)
 611  FORMAT(1X,'ENTER THE WEIGHTS IN PROPER ORDER')
      READ(5,*) (WTS(I),I=1,MAXREC)
  80  WRITE(6,612)
 612  FORMAT(1X,'DO YOU WANT TO ADD ON SMOOTHING OR MINIMIZATION',/,
     +1X,'MATRICES TO A(M,N)*X(N)=B(M), 1=YES 0=NO')
      READ(5,*) IDLS
      IF(IDLS .EQ. 0) GO TO 46
      WRITE(6,613)
 613  FORMAT('FIRST ORDER DIFFERENCE SMOOTHING MATRIX, 1=YES 0=NO')
      READ(5,*) IFOD
      IF(IFOD .EQ. 0) GO TO 47
      WRITE(6,614)
 614  FORMAT(1X,'HOW MANY SUBFAULTS ARE THERE DOWN THE DIP AND',/,
     +1X,'ALONG THE FAULT STRIKE')
      READ(5,*) NSUBV,NSUBH
      WRITE(6,615)
 615  FORMAT(1X,'HORIZONTAL SMOOTHING (1=YES, 0=NO)')
      READ(5,*) IFODH
      IF(IFODH .EQ. 0) GO TO 60
      WRITE(6,616)
 616  FORMAT(1X,'ENTER HORIZONTAL SMOOTHING WEIGHT')
      READ(5,*) WTSMH
  60  WRITE(6,617)
 617  FORMAT(1X,'VERTICAL SMOOTHING (1=YES, 0=NO)')
      READ(5,*) IFODV
      IF(IFODV .EQ. 0) GO TO 47
      WRITE(6,618)
 618  FORMAT(1X,'ENTER VERTICAL SMOOTHING WEIGHT')
      READ(5,*) WTSMV
  47  WRITE(6,619)
 619  FORMAT(1X,'MINIMIZATION MATRIX (1=YES, 0=NO)')
      READ(5,*) IMIN
      IF(IMIN .EQ. 0) GO TO 120
      WRITE(6,620)
 620  FORMAT(1X,'ENTER MINIMIZATION WEIGHT')
      READ(5,*) WTMIN
 120  WRITE(6,621)
 621  FORMAT(1X,'EIGENVALUE FILTERING (1=YES, 0=NO)')
      READ(5,*) IGEN
  46  WRITE(6,622)
 622  FORMAT(1X,'GIVE THE OUTPUT FILE NAME FOR THE OBSERVATIONS')
      READ(5,623) IFB
 623  FORMAT(A)
      OPEN(UNIT=7,FILE=IFB,STATUS='NEW',ACCESS='SEQUENTIAL',
     +FORM='UNFORMATTED')
      WRITE(6,624)
 624  FORMAT(1X,'HOW MANY DIFFERENT MECHANISMS (GREENS FUNCTIONS)',/,
     +1X,'ARE THERE PER SUBFAULT')
      READ(5,*) NMECH
      WRITE(6,625)
 625  FORMAT(1X,'HOW MANY SUBFAULTS ARE THERE')
      READ(5,*) NSUBF
      NN=NSUBF*NMECH*JW
      IC=0
      IF(ICRL .EQ. 2) GO TO 70
C
C     FIRST READ IN OUTPUT FROM PROGRAM READSM.
C
      WRITE(6,626)
 626  FORMAT(1X,'GIVE THE FILE NAME FROM READSM (OBSERVATIONS)')
      READ(5,623) IFRSM
      OPEN(UNIT=10,FILE=IFRSM,STATUS='OLD',ACCESS='SEQUENTIAL',
     +FORM='UNFORMATTED')
      WRITE(6,627)
 627  FORMAT(1X,'HOW MANY STATIONS FROM INPUT FILE ARE TO BE',/,
     +1X,'USED IN THE INVERSION')
      READ(5,*) NSTA
      WRITE(6,628)
 628  FORMAT(1X,'ENTER WHICH STATIONS ARE TO BE USED IN THE ',/,
     +1X,'INVERSION (BY NUMBER) IN THE ORDER THAT THEY',/,
     +1X,'APPEAR ON THE INPUT FILE')
      READ(5,*) (NSTID(I),I=1,NSTA)
      WRITE(6,629) 
 629  FORMAT(1X,'ENTER THE TRIGGER TIMES (RELATIVE TO THE ',/,
     +1X,'ORIGIN TIME) OF EACH OF THE ABOVE STATIONS')
      READ(5,*) (TTRIG(I),I=1,NSTA)
      WRITE(6,630)
 630  FORMAT(1X,'HOW MANY SECONDS AFTER THE TRIGGER TIME ARE',/,
     +1X,'TO BE USED IN THE INVERSION FOR EACH STATION')
      READ(5,*) (SEC(I),I=1,NSTA)
      WRITE(6,647)
 647  FORMAT(1X,'DO YOU WANT TO ADD ON ZEROS TO THE END OF THE',/,
     +1X,'ABOVE RECORD SECTIONS TO BE INVERTED, 1=YES 0=NO')
      READ(5,*) IZERO1
      IF(IZERO1 .EQ. 1) THEN
      WRITE(6,648)
 648  FORMAT(1X,'ENTER HOW MANY SECONDS OF ZEROS TO BE ADDED',/,
     +1X,'ON AND THE INTERVAL IN SECONDS TO APPLY A COSINE',/,
     +1X,'TAPER DOWN TO THE ZERO LEVEL. THE TAPER IS A FRACTIONAL',/,
     +1X,'INTERVAL OF THE SECONDS OF ZEROS ADDED.')
      READ(5,*) ZERO1,TAPER1
      END IF
      WRITE(6,631)
 631  FORMAT(1X,'HOW MANY COMPONENTS FROM EACH STATION ARE TO',/,
     +1X,'BE USED IN THE INVERSION')
      READ(5,*) NCOMP
      NTOT=NSTA*NCOMP
      WRITE(6,632)
 632  FORMAT(1X,'ENTER THE COMPONENT NUMBERS TO BE USED (THAT',/,
     +1X,'IS 1,2,AND/OR 3). BE SURE TO USE THE INDEXING',/,
     +1X,'ORDER FROM READSM')
      READ(5,*) (NCPID(I),I=1,NCOMP)
      READ(10) NSTT
  2   FORMAT(I8)
  3   FORMAT(4A4)
  4   FORMAT(I8,F10.3)
      IS=0
      DO 100 LOOP=1,NSTT
      DO 10 K=1,3
      READ(10) MT,DT
      READ(10) (R(IP,K),IP=1,MT)
  10  CONTINUE
      DO 5 I=1,NSTA
  5   IF(LOOP .EQ. NSTID(I)) GO TO 6
      GO TO 100
  6   CONTINUE
      IS=IS+1
      NPUSE=INT(SEC(IS)/DT+0.5)
      IF(IZERO1 .EQ. 1) NZ1=INT(ZERO1/DT + 0.5)
      IF(NPUSE .GT. MT) GO TO 310
      DO 7 K=1,3
      DO 8 LL=1,NCOMP
  8   IF(K .EQ. NCPID(LL)) GO TO 9
      GO TO 7
  9   IC=IC+1
      IF(IWT .EQ. 0) GO TO 38
  37  AMPL=0.
      DO 35 I=1,NPUSE
  35  IF(ABS(R(I,K)) .GT. AMPL) AMPL=ABS(R(I,K))
      SCING(IC)=PEAK/AMPL
      DO 36 I=1,NPUSE
  36  R(I,K)=R(I,K)*SCING(IC)
  38  IF(IDEP .EQ. 0) GO TO 82
  81  DO 83 I=1,NPUSE
  83  R(I,K)=R(I,K)*WTS(IC)
  82  IF(IZERO1 .EQ. 1) THEN
      NP1=NPUSE+1
      NPU=NPUSE+NZ1
      DO 150 I=NP1,NPU
 150  R(I,K)=0.
      ZLEVEL=R(NPUSE,K)
      NTAP=INT(TAPER1/DT + 0.5)
      NTAP2=NPUSE+NTAP
      DO 152 I=NPUSE,NTAP2
      XCOS=COS(2.*3.1415926*FLOAT(I-NPUSE)/(4.0*
     +FLOAT(NTAP2-NPUSE)))
 152  R(I,K)=ZLEVEL*XCOS
      WRITE(7) NPU,DT
      WRITE(7) (R(IP,K),IP=1,NPU)
      GO TO 7
      END IF
      WRITE(7) NPUSE,DT
      WRITE(7) (R(IP,K),IP=1,NPUSE)
  7   CONTINUE
 100  CONTINUE
      CLOSE(10)
      IF(ICRL .EQ. 1) GO TO 78
C
C
C     READ IN TELESEISMIC OBSERVATIONS FROM PROGRAM TELMOD.
C
  70  WRITE(6,633)
 633  FORMAT(1X,'HOW MANY TELESEISMIC RECORDS ARE THERE')
      READ(5,*) NSTEL
      WRITE(6,634)
 634  FORMAT(1X,'ENTER THE NUMBER OF SECONDS TO BE USED IN THE',/,
     +1X,'INVERSION FOR EACH OF THE TELESEISMIC RECORDS')
      READ(5,*) (SECTEL(I),I=1,NSTEL)
      WRITE(6,649)
 649  FORMAT(1X,'DO YOU WANT TO ADD ON ZEROS TO THE END OF THE',/,
     +1X,'ABOVE RECORD SECTIONS TO BE INVERTED, 1=YES 0=NO')
      READ(5,*) IZERO2
      IF(IZERO2 .EQ. 1) THEN
      WRITE(6,650)
 650  FORMAT(1X,'ENTER HOW MANY SECONDS OF ZEROS TO BE ADDED',/,
     +1X,'ON AND THE INTERVAL IN SECONDS TO APPLY A COSINE',/,
     +1X,'TAPER DOWN TO THE ZERO LEVEL. THE TAPER IS A',/,
     +1X,'FRACTIONAL INTERVAL OF THE SECONDS OF ZEROS ADDED')
      READ(5,*) ZERO2,TAPER2
      END IF
      WRITE(6,635)
 635  FORMAT(1X,'ENTER THE TIMES OF THE BEGINNING OF EACH RECORD',/,
     +1X,'CONSISTENT WITH THE START TIMES IN CADILLAC')
      READ(5,*) (BEGTIM(I),I=1,NSTEL)
      WRITE(6,636)
 636  FORMAT(1X,'GIVE THE FILE NAME OF THE TELESEISMIC OBSERVATIONS',/,
     +1X,'FROM PROGRAM TELMOD')
      READ(5,623) IFTEL
      OPEN(UNIT=9,FILE=IFTEL,STATUS='OLD',ACCESS='SEQUENTIAL',
     +FORM='UNFORMATTED')
      READ(9) NST3
      DO 71 LOOP =1,NSTEL
      IC=IC+1
      READ(9) NTEL,DTEL
      DTSAVE(LOOP)=DTEL
      READ(9) (TEL(IP),IP=1,NTEL)
      NINVT=INT(SECTEL(LOOP)/DTEL + 0.5)
      IF(IZERO2 .EQ. 1) NZ2SV(LOOP)=INT(ZERO2/DTEL + 0.5)
      IF(NINVT .GT. NTEL) GO TO 72
      IF(IWT .EQ. 0) GO TO 75
  74  AMPL=0.
      DO 76 I=1,NINVT
  76  IF(ABS(TEL(I)) .GT. AMPL) AMPL=ABS(TEL(I))
      SCING(IC)=PEAK/AMPL
      DO 77 I=1,NINVT
  77  TEL(I)=TEL(I)*SCING(IC)
  75  IF(IDEP .EQ. 0) GO TO 85
  84  DO 86 I=1,NINVT
  86  TEL(I)=TEL(I)*WTS(IC)
  85  IF(IZERO2 .EQ. 1) THEN
      NIN=NINVT+NZ2SV(LOOP)
      NIN1=NINVT+1
      DO 151 I=NIN1,NIN
 151  TEL(I)=0.
      ZLEVEL=TEL(NINVT)
      NTAP=INT(TAPER2/DTEL + 0.5)
      NTAP2=NINVT+NTAP
      DO 153 I=NINVT,NTAP2
      XCOS=COS(2.*3.1415926*FLOAT(I-NINVT)/(4.0*
     +FLOAT(NTAP2-NINVT)))
 153  TEL(I)=ZLEVEL*XCOS
      WRITE(7) NIN,DTEL
      WRITE(7) (TEL(IP),IP=1,NIN)
      GO TO 71
      END IF
      WRITE(7) NINVT,DTEL
      WRITE(7) (TEL(IP),IP=1,NINVT)
  71  CONTINUE
      CLOSE(9)
C
C     WRITE OUT SMOOTHING MATRIX.
C
  78  IF(IDLS .EQ. 0) GO TO 50
  49  NROW=0
      IF(IFODV .EQ. 1) NROW=NROW+(NSUBF-NSUBH)*NMECH*JW
      IF(IFODH .EQ. 1) NROW=NROW+(NSUBF-NSUBV)*NMECH*JW
      IF(IMIN .EQ. 1)  NROW=NROW+NN
      IF(IGEN .EQ. 1)  NROW=NROW+NN
      WRITE(7) NROW
      DO 51 I=1,NROW
  51  SYN(I)=0.
      WRITE(7) (SYN(IP),IP=1,NROW) 
  50  CLOSE(7)
      IC=0
      WRITE(6,637)
 637  FORMAT(1X,'GIVE THE OUTPUT FILE NAME FOR THE SYNTHETICS')
      READ(5,623) IFA
      OPEN(UNIT=8,FILE=IFA,STATUS='NEW',ACCESS='SEQUENTIAL',
     +FORM='UNFORMATTED')
      IF(ICRL .EQ. 2) GO TO 91
C
C     NOW READ IN OUTPUT FROM PROGRAM NORMOD.
C
      WRITE(6,638)
 638  FORMAT(1X,'GIVE THE FILE NAME FROM NORMOD (SYNTHETICS)')
      READ(5,623) IFG1
      OPEN(UNIT=12,FILE=IFG1,STATUS='OLD',ACCESS='SEQUENTIAL',
     +FORM='UNFORMATTED')
      IF(NMECH .EQ. 1) GO TO 12
      WRITE(6,639)
 639  FORMAT(1X,'GIVE SECOND FILE NAME FROM NORMOD (SYNTH.)')
      READ(5,623) IFG2
      OPEN(UNIT=13,FILE=IFG2,STATUS='OLD',ACCESS='SEQUENTIAL',
     +FORM='UNFORMATTED')
  12  WRITE(6,640)
 640  FORMAT(1X,'ENTER MULTIPLICATIVE SCALING FACTOR TO BE USED',/,
     +1X,'ON THE SYNTHETICS SO THEY ARE THE SAME ORDER',/,
     +1X,'OF MAGNITUDE AS THE OBSERVATIONS')
      READ(5,*) SCALE
      DO 200 LOOP=1,NSTA
      INN=0
      DO 400 ILP=1,NSUBF
      DO 500 IG=1,NMECH
      IUN=11+IG
      INN=INN+1
      READ(IUN) NC
      DO 14 K=1,3
      READ(IUN) RX,STRTM
      READ(IUN) NT,DTT
      READ(IUN) (R(IP,K),IP=1,NT)
      DO 24 I=1,NT
  24  TEMP(I,K)=R(I,K)
      IF(DTT .NE. DT) GO TO 300
  14  CONTINUE
  15  FORMAT(2E15.4)
      IF(ILP .EQ. 1 .AND. IG .EQ. 1) WRITE(6,645) LOOP,STRTM
 645  FORMAT(1X,'SYNTHETIC START TIME FOR STATION ',I3,' IS ',F10.4)
C
C     REORDER COMPONENTS SO THEY ARE THE SAME AS IN READSM.
C     THIS PARTICULAR REORDERING IS FOR CHILE.
C
      IF(LOOP .EQ. 4 .OR. LOOP .GT. 8) THEN
      DO 23 I=1,NT
      R(I,1)=TEMP(I,2)
      R(I,2)=TEMP(I,3)
  23  R(I,3)=TEMP(I,1)
      GO TO 170
      END IF
      DO 45 I=1,NT
      R(I,1)=TEMP(I,1)
      R(I,2)=TEMP(I,3)
  45  R(I,3)=TEMP(I,2)
 170  CONTINUE 
C
C
      ISLOT=0
      INNSAV=INN
      DO 19 K=1,3
      DO 20 LL=1,NCOMP
  20  IF(K .EQ. NCPID(LL)) GO TO 21
      GO TO 19
  21  ISLOT=ISLOT+1
      NPUSE=INT(SEC(LOOP)/DT + 0.5)
      IF(IZERO1 .EQ. 1) NPUSE=NPUSE+NZ1
      DO 25 I=1,NT
  25  R(I,K)=R(I,K)*SCALE
      TM=STRTM-TTRIG(LOOP)
      DO 144 ISL=1,JW
      T=TM+FLOAT(ISL-1)*TLAG
      IF(T .LT. 0.) ITM=INT(T/DT - 0.5)
      IF(T .GE. 0.) ITM=INT(T/DT + 0.5)
      IF(ITM .GT. 0) GO TO 301
      IF(ITM .LT. 0) ITM=-ITM
      LL=ITM+1
      DO 136 I=1,NPUSE
      A(I,INN,ISLOT)=R(LL,K)
      LL=LL+1
 136  IF(LL .GT. NT) GO TO 29
      GO TO 302
 301  DO 303 I=1,ITM
 303  A(I,INN,ISLOT)=0.
      ITM1=ITM+1
      LL=1
      DO 304 I=ITM1,NPUSE
      A(I,INN,ISLOT)=R(LL,K)
      LL=LL+1
 304  IF(LL .GT. NT) GO TO 29
 302  INN=INN+1
 144  CONTINUE
      INN=INNSAV
  19  CONTINUE
      INN=INN+JW-1
 500  CONTINUE
 400  CONTINUE
      DO 31 LL=1,NCOMP
      IC=IC+1
      WRITE(8) NPUSE
      DO 32 K=1,NN
      DO 444 I=1,NPUSE
 444  SYN(I)=A(I,K,LL)
      IF(IWT .EQ. 0) GO TO 41
  39  DO 42 I=1,NPUSE
  42  SYN(I)=SYN(I)*SCING(IC)
      IF(IC .GT. NTOT) GO TO 43
  41  IF(IDEP .EQ. 0) GO TO 88
  87  DO 89 I=1,NPUSE
  89  SYN(I)=SYN(I)*WTS(IC)
  88  WRITE(8) (SYN(IP),IP=1,NPUSE)
  32  CONTINUE
  31  CONTINUE
 200  CONTINUE
      CLOSE(12)
      IF(NMECH .EQ. 2) CLOSE(13)
      IF(ICRL .EQ. 1) GO TO 92
C
C     READ IN OUTPUT FROM PROGRAM CADILLAC.
C
  91  WRITE(6,641)
 641  FORMAT(1X,'GIVE THE FILE NAME FROM CADILLAC (SYNTHETICS)')
      READ(5,623) IFG3
      OPEN(UNIT=12,FILE=IFG3,STATUS='OLD',ACCESS='SEQUENTIAL',
     +FORM='UNFORMATTED')
      READ(12) NST3
      IF(NMECH .EQ. 1) GO TO 93
      WRITE(6,642)
 642  FORMAT(1X,'GIVE SECOND FILE NAME FROM CADILLAC')
      READ(5,623) IFG4
      OPEN(UNIT=13,FILE=IFG4,STATUS='OLD',ACCESS='SEQUENTIAL',
     +FORM='UNFORMATTED')
      READ(13) NST4
  93  WRITE(6,643)
 643  FORMAT(1X,'ENTER MULTIPLICATIVE SCALING FACTOR TO BE USED',/,
     +1X,'ON THE SYNTHETICS SO THEY ARE THE SAME ORDER OF',/,
     +1X,'MAGNITUDE AS THE OBSERVATIONS')
      READ(5,*) SCALE
      DO 94 LOOP=1,NSTEL
      INN=0
      DO 95 ILP=1,NSUBF
      DO 96 IG=1,NMECH
      IUN=11+IG
      INN=INN+1
      READ(IUN) NTCAD,DTCAD,START
      IF(DTCAD .NE. DTSAVE(LOOP)) GO TO 104
      READ(IUN) (TEL(IP),IP=1,NTCAD)
      DO 97 I=1,NTCAD
  97  TEL(I)=TEL(I)*SCALE
      START=0.
      TM=START-BEGTIM(LOOP)
      NINVT=INT(SECTEL(LOOP)/DTCAD + 0.5)
      IF(IZERO2 .EQ. 1) NINVT=NINVT+NZ2SV(LOOP)
      DO 138 ISL=1,JW
      T=TM+FLOAT(ISL-1)*TLAG
      IF(T .LT. 0.) ITM=INT(T/DTCAD - 0.5)
      IF(T .GE. 0.) ITM=INT(T/DTCAD + 0.5)
      IF(ITM .GT. 0) GO TO 140
      IF(ITM .LT. 0) ITM=-ITM
      LL=ITM+1
      DO 141 I=1,NINVT
      A(I,INN,1)=TEL(LL)
      LL=LL+1
 141  IF(LL .GT. NTCAD) GO TO 201 
      GO TO 137
 201  DO 203 J=I,NINVT
 203  A(J,INN,1)=0.
      GO TO 137
 140  DO 142 I=1,ITM
 142  A(I,INN,1)=0.
      ITM1=ITM+1
      KK=1
      DO 143 I=ITM1,NINVT
      A(I,INN,1)=TEL(KK)
      KK=KK+1
 143  IF(KK .GT. NTCAD) GO TO 202 
      GO TO 137
 202  DO 204 J=I,NINVT
 204  A(J,INN,1)=0.
 137  INN=INN+1
 138  CONTINUE
      INN=INN-1
  96  CONTINUE
  95  CONTINUE
      IC=IC+1
      WRITE(8) NINVT
      DO 106 K=1,NN
      DO 107 I=1,NINVT
 107  TEL(I)=A(I,K,1)
      IF(IWT .EQ. 0) GO TO 113
 112  DO 114 I=1,NINVT
 114  TEL(I)=TEL(I)*SCING(IC)
 113  IF(IDEP .EQ. 0) GO TO 109
 108  DO 110 I=1,NINVT
 110  TEL(I)=TEL(I)*WTS(IC)
 109  WRITE(8) (TEL(IP),IP=1,NINVT)
 106  CONTINUE
  94  CONTINUE
      CLOSE(12)
      IF(NMECH .EQ. 2) CLOSE(13)
C
C     WRITE OUT SMOOTHING MATRIX.
C
  92  IF(IDLS .EQ. 0) GO TO 18
  48  WRITE(8) NROW
      WRITE(6,58) NROW
  58  FORMAT(1X,'NUMBER OF ROWS ADDED ON TO A AND B MATRICES FOR
     +SMOOTHING= ',I5)
      IF(IMIN .EQ. 0) GO TO 52
      IDENT=1
      DO 53 K=1,NN
      DO 54 I=1,NN
      SYN(I)=0.
  54  IF(I .EQ. IDENT) SYN(I)=WTMIN
      WRITE(8) (SYN(IP),IP=1,NN)
      IDENT=IDENT+1
  53  CONTINUE
  52  IF(IFOD .EQ. 0) GO TO 121
      IF(IFODH .EQ. 0) GO TO 55
      MM=(NSUBF-NSUBV)*NMECH*JW
      IF(MM .EQ. 0) GO TO 55
      NUMZER=NSUBV*NMECH*JW-1
      ILOC1=1
      ILOC2=ILOC1+NUMZER+1
      DO 56 K=1,MM
      DO 57 I=1,NN
      SYN(I)=0.
      IF(I .EQ. ILOC1) SYN(I)=WTSMH
  57  IF(I .EQ. ILOC2) SYN(I)=-WTSMH
      WRITE(8) (SYN(IP),IP=1,NN)
      ILOC1=ILOC1+1
      ILOC2=ILOC2+1
  56  CONTINUE
  55  IF(IFODV .EQ. 0) GO TO 121
      MM=(NSUBF-NSUBH)*NMECH*JW
      IF(MM .EQ. 0) GO TO 121
      NUMZER=NMECH*JW-1
      ILOC1=1
      ILOC2=ILOC1+NUMZER+1
      ICOUNT=0
      ISTEP=NMECH*JW*NSUBV-NMECH*JW
      DO 59 K=1,MM
      ICOUNT=ICOUNT+1
      DO 61 I=1,NN
      SYN(I)=0.
      IF(I .EQ. ILOC1) SYN(I)=WTSMV
  61  IF(I .EQ. ILOC2) SYN(I)=-WTSMV
      WRITE(8) (SYN(IP),IP=1,NN)
      ILOC1=ILOC1+1
      ILOC2=ILOC2+1
      IF(ICOUNT .EQ. ISTEP) GO TO 62
      GO TO 63
  62  ILOC1=ILOC1+NMECH*JW
      ILOC2=ILOC2+NMECH*JW
      ICOUNT=0
  63  CONTINUE
  59  CONTINUE
 121  IF(IGEN .EQ. 0) GO TO 18
      OPEN(UNIT=12,FILE='KVHV.DAT',STATUS='OLD',ACCESS='SEQUENTIAL',
     +FORM='UNFORMATTED')
      DO 122 I=1,NN
      READ(12) (SYN(IP),IP=1,NN)
      WRITE(8) (SYN(IP),IP=1,NN)
 122  CONTINUE
      CLOSE(12)
      GO TO 18
 128  WRITE(6,129) ITM2,LL
 129  FORMAT(1X,'ITM2= ',I4,' LL= ',I4,' PROBLEM WITH FAKEOUT AND',
     +' NORMA SYNTHETICS')
      GO TO 18
  72  WRITE(6,73) NINVT,NTEL
  73  FORMAT(' NINVT= ',I5,' IS GREATER THAN NTEL= ',I5)
      GO TO 18
  98  WRITE(6,99) START,BEGTIM(LOOP)
  99  FORMAT(' START= ',F10.3,' IS GREATER THAN BEGTIM= ',F10.3)
      GO TO 18
 102  WRITE(6,103) LL,NTCAD
 103  FORMAT(' LL= ',I5,' IS GREATER THAN NTCAD= ',I5)
      GO TO 18
 104  WRITE(6,105) DTCAD,DTSAVE(LOOP)
 105  FORMAT(' DTCAD= ',F10.4,' IS NOT EQUAL TO DTSAVE= ',F10.4)
      GO TO 18
  43  WRITE(6,44) IC,NTOT
  44  FORMAT(1X,'IC= ',I4,' IS GREATER THAN NTOT= ',I4)
      GO TO 18
 300  WRITE(6,16) DTT,DT
  16  FORMAT(1X,'DTT= ',F7.3,' IS NOT EQUAL TO DT= ',F7.3)
      GO TO 18
 310  WRITE(6,22) NPUSE,MT
  22  FORMAT(1X,'NPUSE= ',I5,' IS GREATER THAN MT= ',I5)
      GO TO 18
  26  WRITE(6,27) STRTM,TTRIG(LOOP)
  27  FORMAT(1X,'STRTM= ',F10.3,' IS GREATER THAN TTRIG= ',F10.3)
      GO TO 18
  29  WRITE(6,30) ITM,NPUSE,NT
  30  FORMAT(1X,'SYNTHETIC IS NOT LONG ENOUGH ',3I5)
  18  CLOSE(8)   
      WRITE(6,147) (SCING(I),I=1,100)
 147  FORMAT(1X,6F12.8)
      STOP
      END
